// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package errcode

import (
	"github.com/gotomicro/ego/core/eerrors"
	"google.golang.org/grpc/codes"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the ego package it is being compiled against.
const _ = eerrors.SupportPackageIsVersion1

var errUnknown *eerrors.EgoError
var errInvalidArgument *eerrors.EgoError
var errNotFound *eerrors.EgoError
var errDbError *eerrors.EgoError

func init() {
	errUnknown = eerrors.New(int(codes.Unknown), "errcode.v1.ERR_UNKNOWN", Error_ERR_UNKNOWN.String())
	eerrors.Register(errUnknown)
	errInvalidArgument = eerrors.New(int(codes.InvalidArgument), "errcode.v1.ERR_INVALID_ARGUMENT", Error_ERR_INVALID_ARGUMENT.String())
	eerrors.Register(errInvalidArgument)
	errNotFound = eerrors.New(int(codes.NotFound), "errcode.v1.ERR_NOT_FOUND", Error_ERR_NOT_FOUND.String())
	eerrors.Register(errNotFound)
	errDbError = eerrors.New(int(codes.Internal), "errcode.v1.ERR_DB_ERROR", Error_ERR_DB_ERROR.String())
	eerrors.Register(errDbError)
}

func ErrUnknown() eerrors.Error {
	return errUnknown
}

func ErrInvalidArgument() eerrors.Error {
	return errInvalidArgument
}

func ErrNotFound() eerrors.Error {
	return errNotFound
}

func ErrDbError() eerrors.Error {
	return errDbError
}
